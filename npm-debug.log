0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.0.2
3 info using node@v0.10.32
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add spec="." args=[".",null]
7 verbose parsed spec { raw: '.',
7 verbose parsed spec   scope: null,
7 verbose parsed spec   name: null,
7 verbose parsed spec   rawSpec: '.',
7 verbose parsed spec   spec: '/Users/mikee/Documents/Projects/gulp-behat',
7 verbose parsed spec   type: 'local' }
8 verbose cache add local package /Users/mikee/Documents/Projects/gulp-behat
9 silly lockFile 3a52ce78- .
10 verbose lock . /Users/mikee/.npm/3a52ce78-.lock
11 verbose tar pack [ '/Users/mikee/.npm/gulp-behat/0.4.1/package.tgz', '.' ]
12 verbose tarball /Users/mikee/.npm/gulp-behat/0.4.1/package.tgz
13 verbose folder .
14 info prepublish gulp-behat@0.4.1
15 silly lockFile 1f1177db-tar tar://.
16 verbose lock tar://. /Users/mikee/.npm/1f1177db-tar.lock
17 silly lockFile 12207968-npm-gulp-behat-0-4-1-package-tgz tar:///Users/mikee/.npm/gulp-behat/0.4.1/package.tgz
18 verbose lock tar:///Users/mikee/.npm/gulp-behat/0.4.1/package.tgz /Users/mikee/.npm/12207968-npm-gulp-behat-0-4-1-package-tgz.lock
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 1f1177db-tar tar://.
21 silly lockFile 12207968-npm-gulp-behat-0-4-1-package-tgz tar:///Users/mikee/.npm/gulp-behat/0.4.1/package.tgz
22 silly lockFile 12207968-npm-gulp-behat-0-4-1-package-tgz tar:///Users/mikee/.npm/gulp-behat/0.4.1/package.tgz
23 silly lockFile 8942c2a4-kee-npm-gulp-behat-0-4-1-package /Users/mikee/.npm/gulp-behat/0.4.1/package
24 verbose lock /Users/mikee/.npm/gulp-behat/0.4.1/package /Users/mikee/.npm/8942c2a4-kee-npm-gulp-behat-0-4-1-package.lock
25 silly lockFile 8942c2a4-kee-npm-gulp-behat-0-4-1-package /Users/mikee/.npm/gulp-behat/0.4.1/package
26 silly lockFile 8942c2a4-kee-npm-gulp-behat-0-4-1-package /Users/mikee/.npm/gulp-behat/0.4.1/package
27 silly lockFile 3a52ce78- .
28 silly lockFile 3a52ce78- .
29 silly publish { name: 'gulp-behat',
29 silly publish   version: '0.4.1',
29 silly publish   description: 'Behat plugin for Gulp',
29 silly publish   main: 'index.js',
29 silly publish   dependencies: { 'map-stream': '0.0.4', 'gulp-util': '~2.2.14' },
29 silly publish   devDependencies:
29 silly publish    { gulp: '^3.5.5',
29 silly publish      'gulp-notify': '^2.0.0',
29 silly publish      'gulp-shell': '^0.2.4',
29 silly publish      'gulp-util': '^2.2.20',
29 silly publish      jshint: '^2.5.3',
29 silly publish      mocha: '~1.17.1',
29 silly publish      should: '~3.1.2' },
29 silly publish   scripts: { test: 'mocha --reporter=spec && jshint ./*.js && jshint ./test/*.js' },
29 silly publish   repository: { type: 'git', url: 'git://github.com/mikeerickson/gulp-behat' },
29 silly publish   keywords: [ 'gulpplugin', 'phpspec' ],
29 silly publish   author: { name: 'Mike Erickson', email: 'codedungeon@gmail.com' },
29 silly publish   license: 'MIT',
29 silly publish   bugs: { url: 'https://github.com/mikeerickson/gulp-behat/issues' },
29 silly publish   engines: { node: '>=0.10.0' },
29 silly publish   homepage: 'https://github.com/mikeerickson/gulp-behat',
29 silly publish   directories: { test: 'test' },
29 silly publish   readme: '# gulp-behat\n> Behat plugin for gulp 3\n\n## Usage\n\nFirst, install `gulp-behat` as a development dependency:\n\n```shell\nnpm install --save-dev gulp-behat\n```\n\nThen, add it to your `gulpfile.js`:\n\n```javascript\nvar behat = require(\'gulp-behat\');\n\n// option 1: default format\ngulp.task(\'behat\', function() {\n\tgulp.src(\'./tests/**/*.feature\').pipe(behat());\n});\n\n// option 2: with defined bin and options\ngulp.task(\'behat\', function() {\n\tvar options = {debug: false};\n\tgulp.src(\'./behat/**/*.php\').pipe(behat(\'./vendor/bin/behat\',options));\n});\n\n// option 3: supply callback to integrate something like notification (using gulp-notify)\n\nvar gulp = require(\'gulp\'),\n notify  = require(\'gulp-notify\'),\n behat   = require(\'gulp-behat\'),\n _       = require(\'lodash\');\n\n  gulp.task(\'behat\', function() {\n    gulp.src(\'behat.yml\')\n      .pipe(behat(\'\', {notify: true}))\n      .on(\'error\', notify.onError(testNotification(\'fail\', \'behat\')))\n      .pipe(notify(testNotification(\'pass\', \'behat\')));\n  });\n\nfunction testNotification(status, pluginName, override) {\n\tvar options = {\n\t\ttitle:   ( status == \'pass\' ) ? \'Tests Passed\' : \'Tests Failed\',\n\t\tmessage: ( status == \'pass\' ) ? \'\\n\\nAll tests have passed!\\n\\n\' : \'\\n\\nOne or more tests failed...\\n\\n\',\n\t\ticon:    __dirname + \'/node_modules/gulp-\' + pluginName +\'/assets/test-\' + status + \'.png\'\n\t};\n\toptions = _.merge(options, override);\n  return options;\n}\n\n\n```\n\n### Sample Gulpfile\n\nIf you want a quick and dirty gulpfile, here is one I created for testing this plugin\n\n[Gist: https://gist.github.com/mikeerickson/9163621](https://gist.github.com/mikeerickson/9163621)\n\n\n## API (See Behat online help for complete details $ behat --help)\n\n### (behatpath,options,cb)\n- All parameters are optional\n- If no parameters supplied, it will be equivalent of calling `behat` from command line\n  and all defaults will be used (based on behat.yml configuration)\n\n#### behatpath\n\nType: `String`\n\nThe path to the desired Behat binary\n- If not supplied, the defeault path will be ./vendor/bin/behat\n\n\n#### options.paths\nType: `String`\n\nClear console before executing command\n paths                 Optional path(s) to execute. Could be:\n                       - a dir (features/)\n                       - a feature (*.feature)\n                       - a scenario at specific line (*.feature:10).\n                       - all scenarios at or after a specific line (*.feature:10-*).\n                       - all scenarios at a line within a specific range (*.feature:10-20).\n                       - a scenarios list file (*.scenarios).\n\n#### options.suite\nType: `String`\n\nOnly execute a specific suite.\n\n#### options.format\nType: `String`\n\nHow to format tests output. pretty is default.\n\n#### options.out\nType: `String`\n\nWrite format output to a file/directory\n\n#### options.formatSettings\nType: `String`\n\nSet formatters parameters using json object.\n\n#### options.lang\nType: `String`\n\nPrint output in particular language.\n\n#### options.name\nType: `String`\n\nOnly executeCall the feature elements which match part\n\n#### options.tags\nType: `String`\n\nOnly executeCall the features or scenarios with tags\n\n#### options.role\nType: `String`\n\nOnly executeCall the features with actor role matching a wildcard.\n\n#### options.definitions\nType: `String`\n\nPrint all available step definitions.\n\n#### options.strict (default: false)\nType: `Boolean`\n\nPasses only if all tests are explicitly passing.\n\n#### options.rerun (default: false)\nType: `Boolean`\n\nRe-run scenarios that failed during last execution.\n\n#### options.stopOnFailure (default: false)\nType: `Boolean`\n\nStop processing on first failed scenario.\n\n#### options.dryRun (default: false)\nType: `Boolean`\n\nInvokes formatters without executing the tests and hooks.\n\n#### options.colors (default: true)\nType: `Boolean`\n\nEnables ansi colors (if not supplied it will be used by default)\n\n#### options.profile\nType: `String`\n\nSpecify config profile to use.\n\n#### options.config\nType: `String`\n\nSpecify config to use.\n\n\n## Plug Options\n\n#### options.debug\nType: `Boolean (Default: false)`\n\nEmit error details and shows command used in console\n\n#### options.clear\nType: `Boolean (Default: false)`\n\nClear console before executing command\n\n\n#### options.notify\nType: `Boolean (Default: false)`\n\nCall user supplied callback to handle notification (use gulp-notify)\n\n## Changelog\n\n- 0.4.1 Small Updates\n    - Added missing opt.format setter\n    \n- 0.4.0 Added Plugin Resources\n    - Added new icons for pass and fail which can be used by notify plugin (see example below for usage)\n      /assets/test-pass.png\n      /assets/test-fail.png\n \n- 0.3.3: Bug Fixes and Optimization\n  * Fixed issues with `paths` option\n  * Fixed issue with multiple execution (#2)\n\n- 0.3.2: Fixed ansi color issues\n  * Added `colors` option\n  * Removed `no-ansi` and `ansi` options (deprecated with Behat 3, use `colors`)\n\n- 0.3.1: Added Travis CI Integration\n\n- 0.3.0: Now supports Behat 3 (see tag 0.2.0 for Behat 2.x support)\n\n- 0.2.0: Tagged to support Behat 2, future development will focus on Behat 3\n  * Created tag for Behat 2 support (all future development will be on the 0.3 branch)\n  \n- 0.1.0: Prepared projects to branch into separate version for Behat 2 / Behat 3 support.\n  \n- 0.0.6: Added more behat options\n  * Added dryRun\n  * Added silent\n  \n- 0.0.5 Fixed some README issues\n\n- 0.0.3: Initial Release\n\n## Credits\n\ngulp-behat written by Mike Erickson\n\nE-Mail: [codedungeon@gmail.com](mailto:codedungeon@gmail.com)\n\nTwitter: [@codedungeon](http://twitter.com/codedungeon)\n\nWebiste: [codedungeon.org](http://codedungeon.org)',
29 silly publish   readmeFilename: 'README.md',
29 silly publish   gitHead: '574ce14e6f4e77e143ab7bc84a4ae7899c0df533',
29 silly publish   _id: 'gulp-behat@0.4.1',
29 silly publish   _shasum: '6a747c78da3e0bd820fc7f48f4e784dbfe22dd47',
29 silly publish   _from: '.' }
30 verbose mapToRegistry name gulp-behat
31 verbose mapToRegistry uri https://registry.npmjs.org/gulp-behat
32 verbose publish registryBase https://registry.npmjs.org/
33 verbose request on initialization, where is /gulp-behat
34 verbose request after pass 1, where is /gulp-behat
35 verbose request url raw /gulp-behat
36 verbose request resolving registry [ 'https://registry.npmjs.org/', './gulp-behat' ]
37 verbose request after pass 2, where is https://registry.npmjs.org/gulp-behat
38 verbose request sending authorization for write operation
39 info attempt registry request try #1 at 08:29:36
40 verbose request id 9b008e6d62125488
41 http request PUT https://registry.npmjs.org/gulp-behat
42 http 403 https://registry.npmjs.org/gulp-behat
43 verbose headers { date: 'Mon, 03 Nov 2014 16:29:40 GMT',
43 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
43 verbose headers   'content-type': 'application/json',
43 verbose headers   'cache-control': 'max-age=60',
43 verbose headers   'content-length': '9991',
43 verbose headers   'accept-ranges': 'bytes',
43 verbose headers   via: '1.1 varnish',
43 verbose headers   'x-served-by': 'cache-lax1434-LAX',
43 verbose headers   'x-cache': 'MISS',
43 verbose headers   'x-cache-hits': '0',
43 verbose headers   'x-timer': 'S1415032180.800502,VS0,VE108',
43 verbose headers   'keep-alive': 'timeout=10, max=50',
43 verbose headers   connection: 'Keep-Alive' }
44 error publish Failed PUT 403
45 verbose stack Error: forbidden cannot modify pre-existing version: 0.4.1
45 verbose stack old={"name":"gulp-behat","version":"0.4.1","description":"Behat plugin for Gulp","main":"index.js","dependencies":{"map-stream":"0.0.4","gulp-util":"~2.2.14"},"devDependencies":{"gulp":"^3.5.5","gulp-notify":"^2.0.0","gulp-shell":"^0.2.4","gulp-util":"^2.2.20","jshint":"^2.5.3","mocha":"~1.17.1","should":"~3.1.2"},"scripts":{"test":"mocha --reporter=spec && jshint ./*.js && jshint ./test/*.js"},"repository":{"type":"git","url":"git://github.com/mikeerickson/gulp-behat"},"keywords":["gulpplugin","phpspec"],"author":{"name":"Mike Erickson","email":"codedungeon@gmail.com"},"license":"MIT","bugs":{"url":"https://github.com/mikeerickson/gulp-behat/issues"},"engines":{"node":">=0.10.0"},"homepage":"https://github.com/mikeerickson/gulp-behat","directories":{"test":"test"},"gitHead":"574ce14e6f4e77e143ab7bc84a4ae7899c0df533","_id":"gulp-behat@0.4.1","_shasum":"6a747c78da3e0bd820fc7f48f4e784dbfe22dd47","_from":".","_npmVersion":"2.0.2","_nodeVersion":"0.10.32","_npmUser":{"name":"codedungeon","email":"codedungeon@gmail.com"},"maintainers":[{"name":"codedungeon","email":"codedungeon@gmail.com"}],"dist":{"shasum":"6a747c78da3e0bd820fc7f48f4e784dbfe22dd47","tarball":"http://registry.npmjs.org/gulp-behat/-/gulp-behat-0.4.1.tgz"}}
45 verbose stack new={"name":"gulp-behat","version":"0.4.1","description":"Behat plugin for Gulp","main":"index.js","dependencies":{"map-stream":"0.0.4","gulp-util":"~2.2.14"},"devDependencies":{"gulp":"^3.5.5","gulp-notify":"^2.0.0","gulp-shell":"^0.2.4","gulp-util":"^2.2.20","jshint":"^2.5.3","mocha":"~1.17.1","should":"~3.1.2"},"scripts":{"test":"mocha --reporter=spec && jshint ./*.js && jshint ./test/*.js"},"repository":{"type":"git","url":"git://github.com/mikeerickson/gulp-behat"},"keywords":["gulpplugin","phpspec"],"author":{"name":"Mike Erickson","email":"codedungeon@gmail.com"},"license":"MIT","bugs":{"url":"https://github.com/mikeerickson/gulp-behat/issues"},"engines":{"node":">=0.10.0"},"homepage":"https://github.com/mikeerickson/gulp-behat","directories":{"test":"test"},"readme":"# gulp-behat\u000a> Behat plugin for gulp 3\u000a\u000a## Usage\u000a\u000aFirst, install `gulp-behat` as a development dependency:\u000a\u000a```shell\u000anpm install --save-dev gulp-behat\u000a```\u000a\u000aThen, add it to your `gulpfile.js`:\u000a\u000a```javascript\u000avar behat = require('gulp-behat');\u000a\u000a// option 1: default format\u000agulp.task('behat', function() {\u000a\u0009gulp.src('./tests/**/*.feature').pipe(behat());\u000a});\u000a\u000a// option 2: with defined bin and options\u000agulp.task('behat', function() {\u000a\u0009var options = {debug: false};\u000a\u0009gulp.src('./behat/**/*.php').pipe(behat('./vendor/bin/behat',options));\u000a});\u000a\u000a// option 3: supply callback to integrate something like notification (using gulp-notify)\u000a\u000avar gulp = require('gulp'),\u000a notify  = require('gulp-notify'),\u000a behat   = require('gulp-behat'),\u000a _       = require('lodash');\u000a\u000a  gulp.task('behat', function() {\u000a    gulp.src('behat.yml')\u000a      .pipe(behat('', {notify: true}))\u000a      .on('error', notify.onError(testNotification('fail', 'behat')))\u000a      .pipe(notify(testNotification('pass', 'behat')));\u000a  });\u000a\u000afunction testNotification(status, pluginName, override) {\u000a\u0009var options = {\u000a\u0009\u0009title:   ( status == 'pass' ) ? 'Tests Passed' : 'Tests Failed',\u000a\u0009\u0009message: ( status == 'pass' ) ? '\\n\\nAll tests have passed!\\n\\n' : '\\n\\nOne or more tests failed...\\n\\n',\u000a\u0009\u0009icon:    __dirname + '/node_modules/gulp-' + pluginName +'/assets/test-' + status + '.png'\u000a\u0009};\u000a\u0009options = _.merge(options, override);\u000a  return options;\u000a}\u000a\u000a\u000a```\u000a\u000a### Sample Gulpfile\u000a\u000aIf you want a quick and dirty gulpfile, here is one I created for testing this plugin\u000a\u000a[Gist: https://gist.github.com/mikeerickson/9163621](https://gist.github.com/mikeerickson/9163621)\u000a\u000a\u000a## API (See Behat online help for complete details $ behat --help)\u000a\u000a### (behatpath,options,cb)\u000a- All parameters are optional\u000a- If no parameters supplied, it will be equivalent of calling `behat` from command line\u000a  and all defaults will be used (based on behat.yml configuration)\u000a\u000a#### behatpath\u000a\u000aType: `String`\u000a\u000aThe path to the desired Behat binary\u000a- If not supplied, the defeault path will be ./vendor/bin/behat\u000a\u000a\u000a#### options.paths\u000aType: `String`\u000a\u000aClear console before executing command\u000a paths                 Optional path(s) to execute. Could be:\u000a                       - a dir (features/)\u000a                       - a feature (*.feature)\u000a                       - a scenario at specific line (*.feature:10).\u000a                       - all scenarios at or after a specific line (*.feature:10-*).\u000a                       - all scenarios at a line within a specific range (*.feature:10-20).\u000a                       - a scenarios list file (*.scenarios).\u000a\u000a#### options.suite\u000aType: `String`\u000a\u000aOnly execute a specific suite.\u000a\u000a#### options.format\u000aType: `String`\u000a\u000aHow to format tests output. pretty is default.\u000a\u000a#### options.out\u000aType: `String`\u000a\u000aWrite format output to a file/directory\u000a\u000a#### options.formatSettings\u000aType: `String`\u000a\u000aSet formatters parameters using json object.\u000a\u000a#### options.lang\u000aType: `String`\u000a\u000aPrint output in particular language.\u000a\u000a#### options.name\u000aType: `String`\u000a\u000aOnly executeCall the feature elements which match part\u000a\u000a#### options.tags\u000aType: `String`\u000a\u000aOnly executeCall the features or scenarios with tags\u000a\u000a#### options.role\u000aType: `String`\u000a\u000aOnly executeCall the features with actor role matching a wildcard.\u000a\u000a#### options.definitions\u000aType: `String`\u000a\u000aPrint all available step definitions.\u000a\u000a#### options.strict (default: false)\u000aType: `Boolean`\u000a\u000aPasses only if all tests are explicitly passing.\u000a\u000a#### options.rerun (default: false)\u000aType: `Boolean`\u000a\u000aRe-run scenarios that failed during last execution.\u000a\u000a#### options.stopOnFailure (default: false)\u000aType: `Boolean`\u000a\u000aStop processing on first failed scenario.\u000a\u000a#### options.dryRun (default: false)\u000aType: `Boolean`\u000a\u000aInvokes formatters without executing the tests and hooks.\u000a\u000a#### options.colors (default: true)\u000aType: `Boolean`\u000a\u000aEnables ansi colors (if not supplied it will be used by default)\u000a\u000a#### options.profile\u000aType: `String`\u000a\u000aSpecify config profile to use.\u000a\u000a#### options.config\u000aType: `String`\u000a\u000aSpecify config to use.\u000a\u000a\u000a## Plug Options\u000a\u000a#### options.debug\u000aType: `Boolean (Default: false)`\u000a\u000aEmit error details and shows command used in console\u000a\u000a#### options.clear\u000aType: `Boolean (Default: false)`\u000a\u000aClear console before executing command\u000a\u000a\u000a#### options.notify\u000aType: `Boolean (Default: false)`\u000a\u000aCall user supplied callback to handle notification (use gulp-notify)\u000a\u000a## Changelog\u000a\u000a- 0.4.1 Small Updates\u000a    - Added missing opt.format setter\u000a    \u000a- 0.4.0 Added Plugin Resources\u000a    - Added new icons for pass and fail which can be used by notify plugin (see example below for usage)\u000a      /assets/test-pass.png\u000a      /assets/test-fail.png\u000a \u000a- 0.3.3: Bug Fixes and Optimization\u000a  * Fixed issues with `paths` option\u000a  * Fixed issue with multiple execution (#2)\u000a\u000a- 0.3.2: Fixed ansi color issues\u000a  * Added `colors` option\u000a  * Removed `no-ansi` and `ansi` options (deprecated with Behat 3, use `colors`)\u000a\u000a- 0.3.1: Added Travis CI Integration\u000a\u000a- 0.3.0: Now supports Behat 3 (see tag 0.2.0 for Behat 2.x support)\u000a\u000a- 0.2.0: Tagged to support Behat 2, future development will focus on Behat 3\u000a  * Created tag for Behat 2 support (all future development will be on the 0.3 branch)\u000a  \u000a- 0.1.0: Prepared projects to branch into separate version for Behat 2 / Behat 3 support.\u000a  \u000a- 0.0.6: Added more behat options\u000a  * Added dryRun\u000a  * Added silent\u000a  \u000a- 0.0.5 Fixed some README issues\u000a\u000a- 0.0.3: Initial Release\u000a\u000a## Credits\u000a\u000agulp-behat written by Mike Erickson\u000a\u000aE-Mail: [codedungeon@gmail.com](mailto:codedungeon@gmail.com)\u000a\u000aTwitter: [@codedungeon](http://twitter.com/codedungeon)\u000a\u000aWebiste: [codedungeon.org](http://codedungeon.org)","readmeFilename":"README.md","gitHead":"574ce14e6f4e77e143ab7bc84a4ae7899c0df533","_id":"gulp-behat@0.4.1","_shasum":"6a747c78da3e0bd820fc7f48f4e784dbfe22dd47","_from":".","_npmVersion":"2.0.2","_nodeVersion":"0.10.32","_npmUser":{"name":"codedungeon","email":"codedungeon@gmail.com"},"maintainers":[{"name":"codedungeon","email":"codedungeon@gmail.com"}],"dist":{"shasum":"6a747c78da3e0bd820fc7f48f4e784dbfe22dd47","tarball":"http://registry.npmjs.org/gulp-behat/-/gulp-behat-0.4.1.tgz"}}: gulp-behat
45 verbose stack     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:260:14)
45 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:197:65)
45 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:237:22)
45 verbose stack     at Request.emit (events.js:98:17)
45 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1146:14)
45 verbose stack     at Request.emit (events.js:117:20)
45 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1097:12)
45 verbose stack     at IncomingMessage.emit (events.js:117:20)
45 verbose stack     at _stream_readable.js:943:16
45 verbose stack     at process._tickCallback (node.js:419:13)
46 verbose statusCode 403
47 verbose pkgid gulp-behat
48 verbose cwd /Users/mikee/Documents/Projects/gulp-behat
49 error Darwin 14.0.0
50 error argv "node" "/usr/local/bin/npm" "publish"
51 error node v0.10.32
52 error npm  v2.0.2
53 error code E403
54 error forbidden cannot modify pre-existing version: 0.4.1
54 error old={"name":"gulp-behat","version":"0.4.1","description":"Behat plugin for Gulp","main":"index.js","dependencies":{"map-stream":"0.0.4","gulp-util":"~2.2.14"},"devDependencies":{"gulp":"^3.5.5","gulp-notify":"^2.0.0","gulp-shell":"^0.2.4","gulp-util":"^2.2.20","jshint":"^2.5.3","mocha":"~1.17.1","should":"~3.1.2"},"scripts":{"test":"mocha --reporter=spec && jshint ./*.js && jshint ./test/*.js"},"repository":{"type":"git","url":"git://github.com/mikeerickson/gulp-behat"},"keywords":["gulpplugin","phpspec"],"author":{"name":"Mike Erickson","email":"codedungeon@gmail.com"},"license":"MIT","bugs":{"url":"https://github.com/mikeerickson/gulp-behat/issues"},"engines":{"node":">=0.10.0"},"homepage":"https://github.com/mikeerickson/gulp-behat","directories":{"test":"test"},"gitHead":"574ce14e6f4e77e143ab7bc84a4ae7899c0df533","_id":"gulp-behat@0.4.1","_shasum":"6a747c78da3e0bd820fc7f48f4e784dbfe22dd47","_from":".","_npmVersion":"2.0.2","_nodeVersion":"0.10.32","_npmUser":{"name":"codedungeon","email":"codedungeon@gmail.com"},"maintainers":[{"name":"codedungeon","email":"codedungeon@gmail.com"}],"dist":{"shasum":"6a747c78da3e0bd820fc7f48f4e784dbfe22dd47","tarball":"http://registry.npmjs.org/gulp-behat/-/gulp-behat-0.4.1.tgz"}}
54 error new={"name":"gulp-behat","version":"0.4.1","description":"Behat plugin for Gulp","main":"index.js","dependencies":{"map-stream":"0.0.4","gulp-util":"~2.2.14"},"devDependencies":{"gulp":"^3.5.5","gulp-notify":"^2.0.0","gulp-shell":"^0.2.4","gulp-util":"^2.2.20","jshint":"^2.5.3","mocha":"~1.17.1","should":"~3.1.2"},"scripts":{"test":"mocha --reporter=spec && jshint ./*.js && jshint ./test/*.js"},"repository":{"type":"git","url":"git://github.com/mikeerickson/gulp-behat"},"keywords":["gulpplugin","phpspec"],"author":{"name":"Mike Erickson","email":"codedungeon@gmail.com"},"license":"MIT","bugs":{"url":"https://github.com/mikeerickson/gulp-behat/issues"},"engines":{"node":">=0.10.0"},"homepage":"https://github.com/mikeerickson/gulp-behat","directories":{"test":"test"},"readme":"# gulp-behat\u000a> Behat plugin for gulp 3\u000a\u000a## Usage\u000a\u000aFirst, install `gulp-behat` as a development dependency:\u000a\u000a```shell\u000anpm install --save-dev gulp-behat\u000a```\u000a\u000aThen, add it to your `gulpfile.js`:\u000a\u000a```javascript\u000avar behat = require('gulp-behat');\u000a\u000a// option 1: default format\u000agulp.task('behat', function() {\u000a\u0009gulp.src('./tests/**/*.feature').pipe(behat());\u000a});\u000a\u000a// option 2: with defined bin and options\u000agulp.task('behat', function() {\u000a\u0009var options = {debug: false};\u000a\u0009gulp.src('./behat/**/*.php').pipe(behat('./vendor/bin/behat',options));\u000a});\u000a\u000a// option 3: supply callback to integrate something like notification (using gulp-notify)\u000a\u000avar gulp = require('gulp'),\u000a notify  = require('gulp-notify'),\u000a behat   = require('gulp-behat'),\u000a _       = require('lodash');\u000a\u000a  gulp.task('behat', function() {\u000a    gulp.src('behat.yml')\u000a      .pipe(behat('', {notify: true}))\u000a      .on('error', notify.onError(testNotification('fail', 'behat')))\u000a      .pipe(notify(testNotification('pass', 'behat')));\u000a  });\u000a\u000afunction testNotification(status, pluginName, override) {\u000a\u0009var options = {\u000a\u0009\u0009title:   ( status == 'pass' ) ? 'Tests Passed' : 'Tests Failed',\u000a\u0009\u0009message: ( status == 'pass' ) ? '\\n\\nAll tests have passed!\\n\\n' : '\\n\\nOne or more tests failed...\\n\\n',\u000a\u0009\u0009icon:    __dirname + '/node_modules/gulp-' + pluginName +'/assets/test-' + status + '.png'\u000a\u0009};\u000a\u0009options = _.merge(options, override);\u000a  return options;\u000a}\u000a\u000a\u000a```\u000a\u000a### Sample Gulpfile\u000a\u000aIf you want a quick and dirty gulpfile, here is one I created for testing this plugin\u000a\u000a[Gist: https://gist.github.com/mikeerickson/9163621](https://gist.github.com/mikeerickson/9163621)\u000a\u000a\u000a## API (See Behat online help for complete details $ behat --help)\u000a\u000a### (behatpath,options,cb)\u000a- All parameters are optional\u000a- If no parameters supplied, it will be equivalent of calling `behat` from command line\u000a  and all defaults will be used (based on behat.yml configuration)\u000a\u000a#### behatpath\u000a\u000aType: `String`\u000a\u000aThe path to the desired Behat binary\u000a- If not supplied, the defeault path will be ./vendor/bin/behat\u000a\u000a\u000a#### options.paths\u000aType: `String`\u000a\u000aClear console before executing command\u000a paths                 Optional path(s) to execute. Could be:\u000a                       - a dir (features/)\u000a                       - a feature (*.feature)\u000a                       - a scenario at specific line (*.feature:10).\u000a                       - all scenarios at or after a specific line (*.feature:10-*).\u000a                       - all scenarios at a line within a specific range (*.feature:10-20).\u000a                       - a scenarios list file (*.scenarios).\u000a\u000a#### options.suite\u000aType: `String`\u000a\u000aOnly execute a specific suite.\u000a\u000a#### options.format\u000aType: `String`\u000a\u000aHow to format tests output. pretty is default.\u000a\u000a#### options.out\u000aType: `String`\u000a\u000aWrite format output to a file/directory\u000a\u000a#### options.formatSettings\u000aType: `String`\u000a\u000aSet formatters parameters using json object.\u000a\u000a#### options.lang\u000aType: `String`\u000a\u000aPrint output in particular language.\u000a\u000a#### options.name\u000aType: `String`\u000a\u000aOnly executeCall the feature elements which match part\u000a\u000a#### options.tags\u000aType: `String`\u000a\u000aOnly executeCall the features or scenarios with tags\u000a\u000a#### options.role\u000aType: `String`\u000a\u000aOnly executeCall the features with actor role matching a wildcard.\u000a\u000a#### options.definitions\u000aType: `String`\u000a\u000aPrint all available step definitions.\u000a\u000a#### options.strict (default: false)\u000aType: `Boolean`\u000a\u000aPasses only if all tests are explicitly passing.\u000a\u000a#### options.rerun (default: false)\u000aType: `Boolean`\u000a\u000aRe-run scenarios that failed during last execution.\u000a\u000a#### options.stopOnFailure (default: false)\u000aType: `Boolean`\u000a\u000aStop processing on first failed scenario.\u000a\u000a#### options.dryRun (default: false)\u000aType: `Boolean`\u000a\u000aInvokes formatters without executing the tests and hooks.\u000a\u000a#### options.colors (default: true)\u000aType: `Boolean`\u000a\u000aEnables ansi colors (if not supplied it will be used by default)\u000a\u000a#### options.profile\u000aType: `String`\u000a\u000aSpecify config profile to use.\u000a\u000a#### options.config\u000aType: `String`\u000a\u000aSpecify config to use.\u000a\u000a\u000a## Plug Options\u000a\u000a#### options.debug\u000aType: `Boolean (Default: false)`\u000a\u000aEmit error details and shows command used in console\u000a\u000a#### options.clear\u000aType: `Boolean (Default: false)`\u000a\u000aClear console before executing command\u000a\u000a\u000a#### options.notify\u000aType: `Boolean (Default: false)`\u000a\u000aCall user supplied callback to handle notification (use gulp-notify)\u000a\u000a## Changelog\u000a\u000a- 0.4.1 Small Updates\u000a    - Added missing opt.format setter\u000a    \u000a- 0.4.0 Added Plugin Resources\u000a    - Added new icons for pass and fail which can be used by notify plugin (see example below for usage)\u000a      /assets/test-pass.png\u000a      /assets/test-fail.png\u000a \u000a- 0.3.3: Bug Fixes and Optimization\u000a  * Fixed issues with `paths` option\u000a  * Fixed issue with multiple execution (#2)\u000a\u000a- 0.3.2: Fixed ansi color issues\u000a  * Added `colors` option\u000a  * Removed `no-ansi` and `ansi` options (deprecated with Behat 3, use `colors`)\u000a\u000a- 0.3.1: Added Travis CI Integration\u000a\u000a- 0.3.0: Now supports Behat 3 (see tag 0.2.0 for Behat 2.x support)\u000a\u000a- 0.2.0: Tagged to support Behat 2, future development will focus on Behat 3\u000a  * Created tag for Behat 2 support (all future development will be on the 0.3 branch)\u000a  \u000a- 0.1.0: Prepared projects to branch into separate version for Behat 2 / Behat 3 support.\u000a  \u000a- 0.0.6: Added more behat options\u000a  * Added dryRun\u000a  * Added silent\u000a  \u000a- 0.0.5 Fixed some README issues\u000a\u000a- 0.0.3: Initial Release\u000a\u000a## Credits\u000a\u000agulp-behat written by Mike Erickson\u000a\u000aE-Mail: [codedungeon@gmail.com](mailto:codedungeon@gmail.com)\u000a\u000aTwitter: [@codedungeon](http://twitter.com/codedungeon)\u000a\u000aWebiste: [codedungeon.org](http://codedungeon.org)","readmeFilename":"README.md","gitHead":"574ce14e6f4e77e143ab7bc84a4ae7899c0df533","_id":"gulp-behat@0.4.1","_shasum":"6a747c78da3e0bd820fc7f48f4e784dbfe22dd47","_from":".","_npmVersion":"2.0.2","_nodeVersion":"0.10.32","_npmUser":{"name":"codedungeon","email":"codedungeon@gmail.com"},"maintainers":[{"name":"codedungeon","email":"codedungeon@gmail.com"}],"dist":{"shasum":"6a747c78da3e0bd820fc7f48f4e784dbfe22dd47","tarball":"http://registry.npmjs.org/gulp-behat/-/gulp-behat-0.4.1.tgz"}}: gulp-behat
55 error If you need help, you may report this error at:
55 error     <http://github.com/npm/npm/issues>
56 verbose exit [ 1, true ]
